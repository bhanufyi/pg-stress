name: Backup and Encrypt Prod DB

on:
  # schedule:
  #   # - cron: '0 5 * * *'  # Runs daily at 5 AM UTC
  workflow_dispatch:  # Allows manual trigger

env:
    PGPASSWORD: ${{ secrets.DB_PASSWORD }}
    TARGET_DB_INSTANCE: postgres://bhanu:${{ secrets.DB_PASSWORD }}@localhost:5432/postgres
    TARGETDB: postgres://bhanu:${{ secrets.DB_PASSWORD }}@localhost:5432/prod-template

jobs:
  backup-and-encrypt-db:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Check out repository
        uses: actions/checkout@v4

      # Authenticate gcloud
      - name: Authenticate gcloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Set up gcloud CLI
      - name: Set up gcloud
        uses: google-github-actions/setup-gcloud@v2
        with:
          version: 'latest'
     
      # Step 5: List available backups
      - name: List backups in GCS
        id: list-backups
        run: |
          BUCKET_NAME="bhanufyi-pg-backups"
          BACKUP_PREFIX="bhanufyi_prod_dump_"
          LATEST_BACKUP=$(gsutil ls gs://${BUCKET_NAME}/${BACKUP_PREFIX}* | sort | tail -n 1)
          echo "Latest Backup: $LATEST_BACKUP"
          echo "LATEST_BACKUP=$LATEST_BACKUP" >> $GITHUB_ENV

      # Step 6: Download the latest backup
      - name: Download the latest backup
        run: |
          gsutil cp $LATEST_BACKUP /tmp/prod-template.dump.gpg.gz
          ls -lh /tmp/prod-template.dump.gpg.gz
    
      # Step 7: Decrypt and decompress the backup
      - name: Decrypt and decompress the backup
        run: |
          set -e
          # Decompress the gzip file
          echo "Decompressing the gzip file..."
          gzip -d /tmp/prod-template.dump.gpg.gz
          ls -lh /tmp/prod-template.dump.gpg

          # Decrypt the encrypted file
          echo "Decrypting the file..."
          gpg --batch --passphrase ${{ secrets.GPG_PASSPHRASE }} --output /tmp/prod-template.dump --decrypt /tmp/prod-template.dump.gpg
          ls -lh /tmp/prod-template.dump

      - name: Install PostgreSQL client for version 15
        run: |
            sudo apt-get update
            wget -qO- https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
            echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" | sudo tee /etc/apt/sources.list.d/pgdg.list
            sudo apt-get update
            sudo apt-get install -y postgresql-client-15


      - name: Verify pg_dump version
        run: pg_restore --version


      
      - name: Start Cloud SQL Proxy
        uses: ./.github/actions/setup-cloud-sql-proxy
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          region: us-east1
          instance_id: bhanufyi-dev-db
          # host & port default to 127.0.0.1:5432, so no need to override if that's ok

      - name: create template db
        run: |
            psql -v ON_ERROR_STOP=on --dbname $TARGET_DB_INSTANCE <<EOM
             DROP DATABASE IF EXISTS "prod-template" WITH (FORCE);
             CREATE DATABASE "prod-template";
            EOM
      - run: |
            pg_restore --dbname $TARGETDB /tmp/prod-template.dump


          